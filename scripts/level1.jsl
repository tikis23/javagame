int32 gunId = 0;
int32 framesStuck = 0;
bool cheat = true;

void randMove(int32 steps, int32 amount) {
    int64 rand = random(0, 100);
    while (steps > 0) {
        if (rand < 50) playerMoveLeft(amount);
        else playerMoveRight(amount);
        wait();
        steps = steps - 1;
    }
    return;
}

bool shootAtEnemy(int32 enemyId) {
    bool tryingToWalk = false;
    if (playerCanShootEnemy(enemyId)) {
        playerSetWeapon(gunId);
        playerAttack();

        randMove(1, 50);

        gunId = (gunId + 1) % playerGetWeaponCount();       
    } else if (playerCanSeeEnemy(enemyId)) {
        playerTurnToEnemy(enemyId);
    } else {
        playerStepToEnemy(enemyId);
        tryingToWalk = true;
    }
    return tryingToWalk;
}


while (true) {
    bool tryingToWalk = false;
    if (worldGetEnemyCount() > 0) { // kill enemies
        int32 enemyId = worldGetClosestEnemyId();
        tryingToWalk = shootAtEnemy(enemyId);
        if (cheat) {
            cheatHealPlayer();
            cheatKillEnemy(enemyId);
        }
    } else { // go to exit
        if (playerIsExitReached()) break;
        playerStepToExit();
        tryingToWalk = true;
    }

    if (playerIsWalking()) { // turn camera to walk direction
        playerTurnToVelocityDir();
    } else if (tryingToWalk) { // count frames stuck
        framesStuck = framesStuck + 1;
    }

    if (framesStuck > 80) { // prevent being stuck
        randMove(20, 80);
        framesStuck = 0;
    }
    wait();
}